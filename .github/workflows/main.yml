# This is a basic workflow to help you get started with Actions

name: CI/CD Pipelines
on:
  push:
    branches:
      - '*'
      - '!master'
      - '!dev'
  pull_request:
    types: [ closed ]

jobs:
  #Test's job
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: ./gradlew test
  #Build's job
  build:
    needs: tests
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      - name: Build with Maven
        run: ./gradlew build
      #Build the application using Maven
      - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
          #Set artifact name
          name: artifact
          #From this path
          path: build/libs/demo-0.0.1-SNAPSHOT.jar
  #Deploy's job
  deploy-to-dev:
    #Depends on build's job
    needs: build
    name: Deploy To Dev
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    if: github.ref == 'dev' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Download JAR
        #Download the artifact which was uploaded in the build's job
        uses: actions/download-artifact@v2
        with:
          name: artifact
      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: false
          environment_name: Basicapplicationdemo-env-dev
          application_name: Basic-Application-Demo-dev
          version_label: ${{github.SHA}}
          region: us-east-2
          deployment_package: demo-0.0.1-SNAPSHOT.jar
  deploy-to-production:
    #Depends on build's job
    needs: build
    name: Deploy To Production
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    if: github.ref == 'master' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Download JAR
        #Download the artifact which was uploaded in the build's job
        uses: actions/download-artifact@v2
        with:
          name: artifact
      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: false
          environment_name: Basicapplicationdemo-env
          application_name: Basic-Application-Demo
          version_label: ${{github.SHA}}
          region: us-east-2
          deployment_package: demo-0.0.1-SNAPSHOT.jar
